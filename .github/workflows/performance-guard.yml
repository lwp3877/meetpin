# ÏÑ±Îä• ÌöåÍ∑Ä Î∞©ÏßÄ ÏõåÌÅ¨ÌîåÎ°úÏö∞
# PR Ïãú Lighthouse CI Ïã§Ìñâ Î∞è ÏÑ±Îä• ÏòàÏÇ∞ Í≤ÄÏ¶ù
# ÏòàÏÇ∞ Ï¥àÍ≥º Ïãú PR Ïã§Ìå® Ï≤òÎ¶¨

name: üöÄ Performance Regression Guard

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'next.config.js'
      - 'tailwind.config.ts'
  workflow_dispatch: # ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  performance-audit:
    name: ÏÑ±Îä• Í∞êÏÇ¨ Î∞è ÏòàÏÇ∞ Í≤ÄÏ¶ù
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Ïù¥Ï†Ñ Ïª§Î∞ãÍ≥º ÎπÑÍµêÎ•º ÏúÑÌï¥

      - name: pnpm ÏÑ§Ï†ï
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Node.js ÏÑ§Ï†ï
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò
        run: pnpm install --frozen-lockfile

      - name: ÌîÑÎ°úÎçïÏÖò ÎπåÎìú
        run: |
          echo "üèóÔ∏è ÌîÑÎ°úÎçïÏÖò ÎπåÎìú Ï§ë..."
          pnpm build

      - name: ÎπåÎìú ÏÇ¨Ïù¥Ï¶à Î∂ÑÏÑù
        run: |
          echo "üìä ÎπåÎìú ÏÇ¨Ïù¥Ï¶à Î∂ÑÏÑù Ï§ë..."

          # Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à Ï∏°Ï†ï
          BUNDLE_SIZE=$(du -sh .next/static | cut -f1)
          echo "Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à: $BUNDLE_SIZE"
          echo "bundle_size=$BUNDLE_SIZE" >> $GITHUB_OUTPUT

          # JavaScript Î≤àÎì§ ÏÉÅÏÑ∏ Î∂ÑÏÑù
          echo "=== JavaScript Î≤àÎì§ Î∂ÑÏÑù ==="
          find .next/static/chunks -name "*.js" -exec ls -lh {} \; | sort -k5 -hr | head -10

          # ÌÅ∞ ÌååÏùº Í≤ΩÍ≥† (1MB Ï¥àÍ≥º)
          LARGE_FILES=$(find .next/static -size +1M -type f)
          if [ -n "$LARGE_FILES" ]; then
            echo "‚ö†Ô∏è 1MB Ï¥àÍ≥º ÌååÏùº Î∞úÍ≤¨:"
            echo "$LARGE_FILES"
          fi

      - name: Lighthouse CI ÏÑ§Ïπò
        run: |
          echo "üè† Lighthouse CI ÏÑ§Ïπò Ï§ë..."
          npm install -g @lhci/cli@0.12.x

      - name: Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë (Î∞±Í∑∏ÎùºÏö¥Îìú)
        run: |
          echo "üöÄ Í∞úÎ∞ú ÏÑúÎ≤Ñ ÏãúÏûë Ï§ë..."
          pnpm start &

          # ÏÑúÎ≤Ñ Ï§ÄÎπÑ ÎåÄÍ∏∞ (ÏµúÎåÄ 60Ï¥à)
          for i in {1..60}; do
            if curl -s http://localhost:3000/api/healthz > /dev/null; then
              echo "‚úÖ ÏÑúÎ≤Ñ Ï§ÄÎπÑ ÏôÑÎ£å (${i}Ï¥à)"
              break
            fi
            echo "‚è≥ ÏÑúÎ≤Ñ ÏãúÏûë ÎåÄÍ∏∞ Ï§ë... ($i/60)"
            sleep 1
          done

      - name: Lighthouse ÏÑ±Îä• Í∞êÏÇ¨
        run: |
          echo "üîç Lighthouse ÏÑ±Îä• Í∞êÏÇ¨ Ïã§Ìñâ Ï§ë..."

          # Lighthouse CI ÏÑ§Ï†ï ÌååÏùº ÏÉùÏÑ±
          cat > lighthouserc.js << 'EOF'
          module.exports = {
            ci: {
              collect: {
                url: [
                  'http://localhost:3000',
                  'http://localhost:3000/map',
                  'http://localhost:3000/room/new'
                ],
                numberOfRuns: 3,
                settings: {
                  chromeFlags: '--no-sandbox --headless --disable-gpu',
                  preset: 'desktop',
                  throttling: {
                    rttMs: 40,
                    throughputKbps: 10240,
                    cpuSlowdownMultiplier: 1
                  }
                }
              },
              assert: {
                assertions: {
                  'categories:performance': ['error', {minScore: 0.75}],
                  'categories:accessibility': ['error', {minScore: 0.9}],
                  'categories:best-practices': ['error', {minScore: 0.8}],
                  'categories:seo': ['error', {minScore: 0.8}],
                  
                  // Core Web Vitals ÏòàÏÇ∞
                  'largest-contentful-paint': ['error', {maxNumericValue: 4000}],
                  'cumulative-layout-shift': ['error', {maxNumericValue: 0.25}],
                  'total-blocking-time': ['error', {maxNumericValue: 600}],
                  'first-contentful-paint': ['error', {maxNumericValue: 3000}],
                  
                  // Î¶¨ÏÜåÏä§ ÏòàÏÇ∞
                  'total-byte-weight': ['error', {maxNumericValue: 3000000}], // 3MB
                  'unused-javascript': ['warn', {maxNumericValue: 500000}], // 500KB
                  'unused-css-rules': ['warn', {maxNumericValue: 100000}], // 100KB
                  
                  // ÏÑ±Îä• Î©îÌä∏Î¶≠
                  'speed-index': ['error', {maxNumericValue: 5000}],
                  'interactive': ['error', {maxNumericValue: 6000}]
                }
              },
              upload: {
                target: 'temporary-public-storage'
              }
            }
          }
          EOF

          # Lighthouse CI Ïã§Ìñâ
          lhci autorun

      - name: ÏÑ±Îä• ÏòàÏÇ∞ Í≤ÄÏ¶ù
        id: perf-budget
        run: |
          echo "üí∞ ÏÑ±Îä• ÏòàÏÇ∞ Í≤ÄÏ¶ù Ï§ë..."

          # Lighthouse Í≤∞Í≥º ÌååÏã±
          RESULTS_DIR=".lighthouseci"
          if [ -d "$RESULTS_DIR" ]; then
            echo "=== Lighthouse Í≤∞Í≥º ÏöîÏïΩ ==="
            
            # ÏÑ±Îä• Ï†êÏàò Ï∂îÏ∂ú
            for file in $RESULTS_DIR/*.json; do
              if [ -f "$file" ]; then
                PERF_SCORE=$(jq -r '.categories.performance.score // 0' "$file")
                LCP=$(jq -r '.audits."largest-contentful-paint".numericValue // 0' "$file")
                CLS=$(jq -r '.audits."cumulative-layout-shift".numericValue // 0' "$file")
                TBT=$(jq -r '.audits."total-blocking-time".numericValue // 0' "$file")
                
                echo "ÏÑ±Îä• Ï†êÏàò: $(echo "$PERF_SCORE * 100" | bc -l | cut -d. -f1)/100"
                echo "LCP: ${LCP}ms"
                echo "CLS: $CLS"
                echo "TBT: ${TBT}ms"
                
                # ÏòàÏÇ∞ Ï¥àÍ≥º Ï≤¥ÌÅ¨
                if (( $(echo "$PERF_SCORE < 0.75" | bc -l) )); then
                  echo "budget_violation=performance_score" >> $GITHUB_OUTPUT
                fi
                
                if (( $(echo "$LCP > 4000" | bc -l) )); then
                  echo "budget_violation=lcp" >> $GITHUB_OUTPUT
                fi
                
                if (( $(echo "$CLS > 0.25" | bc -l) )); then
                  echo "budget_violation=cls" >> $GITHUB_OUTPUT
                fi
              fi
            done
          fi

      - name: Ïù¥Ï†Ñ Î≤ÑÏ†ÑÍ≥º ÏÑ±Îä• ÎπÑÍµê
        run: |
          echo "üìä ÏÑ±Îä• Î≥ÄÌôî Î∂ÑÏÑù Ï§ë..."

          # Í∏∞Ï§Ä Î∏åÎûúÏπò Ï≤¥ÌÅ¨ÏïÑÏõÉ
          git fetch origin main

          # ÌòÑÏû¨ Î∏åÎûúÏπòÏùò Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à
          CURRENT_SIZE=$(du -s .next/static | cut -f1)

          # main Î∏åÎûúÏπòÎ°ú ÏûÑÏãú Ï†ÑÌôò
          git stash push -m "temp-stash-for-comparison"
          git checkout origin/main

          # Í∏∞Ï§Ä Î≤ÑÏ†Ñ ÎπåÎìú (Ïã§Ìå®Ìï¥ÎèÑ Í≥ÑÏÜç)
          if pnpm build; then
            BASELINE_SIZE=$(du -s .next/static | cut -f1)
            SIZE_DIFF=$((CURRENT_SIZE - BASELINE_SIZE))
            SIZE_CHANGE_PERCENT=$(echo "scale=2; $SIZE_DIFF * 100 / $BASELINE_SIZE" | bc -l)
            
            echo "Í∏∞Ï§Ä Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à: ${BASELINE_SIZE}KB"
            echo "ÌòÑÏû¨ Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à: ${CURRENT_SIZE}KB"
            echo "Î≥ÄÌôîÎüâ: ${SIZE_DIFF}KB (${SIZE_CHANGE_PERCENT}%)"
            
            # Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à 10% Ï¥àÍ≥º Ï¶ùÍ∞Ä Ïãú Í≤ΩÍ≥†
            if (( $(echo "$SIZE_CHANGE_PERCENT > 10" | bc -l) )); then
              echo "‚ö†Ô∏è Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à 10% Ï¥àÍ≥º Ï¶ùÍ∞Ä"
              echo "bundle_size_violation=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ö†Ô∏è Í∏∞Ï§Ä Î≤ÑÏ†Ñ ÎπåÎìú Ïã§Ìå® - ÎπÑÍµê ÏÉùÎûµ"
          fi

          # ÏõêÎûò Î∏åÎûúÏπòÎ°ú Î≥µÏõê
          git checkout -
          git stash pop || true

      - name: ÏÑ±Îä• Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ±
        if: always()
        run: |
          echo "üìã ÏÑ±Îä• Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± Ï§ë..."

          cat > perf-report.md << 'EOF'
          ## üöÄ ÏÑ±Îä• Í∞êÏÇ¨ Í≤∞Í≥º

          ### üìä Lighthouse Ï†êÏàò
          EOF

          # Lighthouse Í≤∞Í≥ºÍ∞Ä ÏûàÏúºÎ©¥ Ï∂îÍ∞Ä
          if [ -d ".lighthouseci" ]; then
            echo "| Î©îÌä∏Î¶≠ | Ï†êÏàò/Í∞í | ÏÉÅÌÉú |" >> perf-report.md
            echo "|--------|---------|------|" >> perf-report.md
            
            for file in .lighthouseci/*.json; do
              if [ -f "$file" ]; then
                PERF=$(jq -r '.categories.performance.score // 0' "$file")
                PERF_SCORE=$(echo "$PERF * 100" | bc -l | cut -d. -f1)
                
                LCP=$(jq -r '.audits."largest-contentful-paint".numericValue // 0' "$file")
                CLS=$(jq -r '.audits."cumulative-layout-shift".numericValue // 0' "$file")
                TBT=$(jq -r '.audits."total-blocking-time".numericValue // 0' "$file")
                
                PERF_STATUS=$([ "$PERF_SCORE" -ge 75 ] && echo "‚úÖ" || echo "‚ùå")
                LCP_STATUS=$([ "$(echo "$LCP <= 4000" | bc -l)" = "1" ] && echo "‚úÖ" || echo "‚ùå")
                CLS_STATUS=$([ "$(echo "$CLS <= 0.25" | bc -l)" = "1" ] && echo "‚úÖ" || echo "‚ùå")
                
                echo "| Performance | ${PERF_SCORE}/100 | $PERF_STATUS |" >> perf-report.md
                echo "| LCP | ${LCP}ms | $LCP_STATUS |" >> perf-report.md
                echo "| CLS | $CLS | $CLS_STATUS |" >> perf-report.md
                echo "| TBT | ${TBT}ms | - |" >> perf-report.md
                break
              fi
            done
          fi

          echo "" >> perf-report.md
          echo "### üì¶ Î≤àÎì§ Î∂ÑÏÑù" >> perf-report.md
          echo "- ÌòÑÏû¨ Î≤àÎì§ ÏÇ¨Ïù¥Ï¶à: $(du -sh .next/static | cut -f1)" >> perf-report.md

          # ÏòàÏÇ∞ ÏúÑÎ∞ò ÏöîÏïΩ
          if [ -n "${{ steps.perf-budget.outputs.budget_violation }}" ]; then
            echo "" >> perf-report.md
            echo "### ‚ö†Ô∏è ÏÑ±Îä• ÏòàÏÇ∞ ÏúÑÎ∞ò" >> perf-report.md
            echo "- ÏúÑÎ∞ò Ìï≠Î™©: ${{ steps.perf-budget.outputs.budget_violation }}" >> perf-report.md
            echo "- **Ïù¥ PRÏùÄ ÏÑ±Îä• Í∏∞Ï§ÄÏùÑ Ï∂©Ï°±ÌïòÏßÄ ÏïäÏäµÎãàÎã§.**" >> perf-report.md
          fi

      - name: PRÏóê ÏÑ±Îä• Î¶¨Ìè¨Ìä∏ ÎåìÍ∏Ä Ï∂îÍ∞Ä
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const report = fs.readFileSync('perf-report.md', 'utf8');
              
              // Í∏∞Ï°¥ Î¥á ÎåìÍ∏Ä Ï∞æÍ∏∞
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const botComment = comments.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('üöÄ ÏÑ±Îä• Í∞êÏÇ¨ Í≤∞Í≥º')
              );
              
              if (botComment) {
                // Í∏∞Ï°¥ ÎåìÍ∏Ä ÏóÖÎç∞Ïù¥Ìä∏
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: report
                });
              } else {
                // ÏÉà ÎåìÍ∏Ä ÏÉùÏÑ±
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: report
                });
              }
            } catch (error) {
              console.log('ÏÑ±Îä• Î¶¨Ìè¨Ìä∏ ÎåìÍ∏Ä Ï∂îÍ∞Ä Ïã§Ìå®:', error);
            }

      - name: ÏÑ±Îä• ÏòàÏÇ∞ ÏúÑÎ∞ò Ïãú Ïã§Ìå® Ï≤òÎ¶¨
        if: steps.perf-budget.outputs.budget_violation
        run: |
          echo "‚ùå ÏÑ±Îä• ÏòàÏÇ∞ ÏúÑÎ∞òÏúºÎ°ú Ïù∏Ìïú CI Ïã§Ìå®"
          echo "ÏúÑÎ∞ò Ìï≠Î™©: ${{ steps.perf-budget.outputs.budget_violation }}"
          echo ""
          echo "ÏÑ±Îä• Í∞úÏÑ† ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî:"
          echo "1. Î∂àÌïÑÏöîÌïú JavaScript Ï†úÍ±∞"
          echo "2. Ïù¥ÎØ∏ÏßÄ ÏµúÏ†ÅÌôî"
          echo "3. ÏΩîÎìú Ïä§ÌîåÎ¶¨ÌåÖ Ï†ÅÏö©"
          echo "4. Î≤àÎì§ Î∂ÑÏÑù: pnpm analyze:bundle"
          exit 1

      - name: ÏïÑÌã∞Ìå©Ìä∏ ÏóÖÎ°úÎìú
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            .lighthouseci/
            perf-report.md
          retention-days: 30
