{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(taskkill:*)",
      "Bash(npx kill-port:*)",
      "Bash(pnpm dev:*)",
      "Bash(git commit:*)",
      "Bash(pnpm add:*)",
      "Bash(del:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm test:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(gh repo view:*)",
      "Bash(gh api:*)",
      "Bash(git ls-tree:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(pnpm repo:doctor:*)",
      "Bash(pnpm e2e:*)",
      "Bash(find:*)",
      "Bash(echo:*)",
      "Bash(if exist playwright-report rmdir /s /q playwright-report)",
      "Bash(if exist test-results rmdir /s /q test-results)",
      "Bash(if exist report.md del /f /q report.md)",
      "Bash(pnpm store prune:*)",
      "Bash(pnpm install:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(pnpm approve-builds:*)",
      "Bash(curl:*)",
      "Bash(pnpm playwright install:*)",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(if exist node_modules\\.cache rmdir /s /q node_modules\\.cache)",
      "Bash(set PORT=3000)",
      "Bash(git rev-parse:*)",
      "Bash(git fetch:*)",
      "Bash(claude mcp install:*)",
      "Bash(npx:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Bash(claude doctor)",
      "Read(C:\\Users\\이원표/**)",
      "Read(C:\\Users\\이원표/**)",
      "Read(C:\\Users\\이원표/**)",
      "Read(C:\\Users\\이원표/**)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_directory",
      "Bash(set PORT=3001)",
      "Bash(timeout 15 pnpm dev)",
      "Bash(timeout:*)",
      "Bash(pnpm playwright test:*)",
      "Read(\\/**)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:127.0.0.1)",
      "WebFetch(domain:xnrqfkecpabucnoxxtwa.supabase.co)",
      "Bash(pnpm start:*)",
      "WebFetch(domain:meetpin-weld.vercel.app)",
      "mcp__github__list_commits",
      "WebFetch(domain:vercel.com)",
      "Bash(git remote get-url origin)",
      "mcp__github__get_file_contents",
      "Bash(git reset:*)",
      "WebFetch(domain:api.github.com)",
      "Bash(git show:*)",
      "Bash(pnpm audit:*)",
      "Bash(if [ -f \"src/lib/buildBuster.ts\" ])",
      "Bash(else echo \"buildBuster.ts not found\")",
      "Bash(fi)",
      "mcp__github__create_or_update_file",
      "WebFetch(domain:meetpin-git-main-meetpins-projects.vercel.app)",
      "Bash(pnpm playwright:*)",
      "Bash(node:*)",
      "Bash(pnpm exec:*)",
      "WebFetch(domain:dapi.kakao.com)",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__create_directory",
      "Bash(start C:Users이원표Desktopmeetpintest-social-login.html)",
      "Bash(start \"\" \"C:\\Users\\이원표\\Desktop\\meetpin\\test-social-login.html\")",
      "mcp__filesystem__move_file",
      "Bash(git rm:*)",
      "Bash(cat:*)",
      "Bash(vercel:*)",
      "Bash(npm install:*)",
      "mcp__filesystem__read_multiple_files",
      "Bash(if exist \"C:\\Users\\이원표\\Desktop\\meetpin\\src\\app\\hobby\\FORCE_DEPLOY.txt\" del \"C:\\Users\\이원표\\Desktop\\meetpin\\src\\app\\hobby\\FORCE_DEPLOY.txt\")",
      "Bash(pnpm qa:validate:*)",
      "Bash(playwright test:*)",
      "Bash(pnpm perf:baseline:*)",
      "Bash(pnpm analyze:bundle:*)",
      "Bash(pnpm perf:compare:*)",
      "Bash(if exist \"C:\\Users\\이원표\\Desktop\\meetpin\\.next\" rmdir /s /q \"C:\\Users\\이원표\\Desktop\\meetpin\\.next\")",
      "Bash(if exist \".next\" rmdir /s /q \".next\")",
      "Bash(if exist \"node_modules\\.cache\" rmdir /s /q \"node_modules\\.cache\")",
      "Bash(pnpm:*)",
      "Bash(gh:*)",
      "Bash(git --version)",
      "Bash(NEXT_DISABLE_SOURCEMAPS=true pnpm next build --no-lint)",
      "Bash(NEXT_DISABLE_SOURCEMAPS=true pnpm build)",
      "Bash(if exist \"nul\" del \"nul\")",
      "Bash(git clean:*)",
      "Bash(if [ -z \"$VERCEL_TOKEN\" ])",
      "Bash(then echo \"NEED_TOKEN\")",
      "Bash(exit 2)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__write_file",
      "Bash(rg:*)",
      "Bash(npm run build:*)",
      "Bash(export PROD_URL=https://meetpin-weld.vercel.app)",
      "Bash(export TZ=Asia/Seoul)",
      "Bash(if exist .eslintignore del .eslintignore)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github",
    "fetch",
    "postgres",
    "filesystem",
    "playwright"
  ]
}